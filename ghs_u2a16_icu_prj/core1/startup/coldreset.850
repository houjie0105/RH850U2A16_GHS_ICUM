-------------------------------------------------------------------------------
-- Module      = coldreset.850
-- Version     = CN1.00
--               manually created  
--               
-------------------------------------------------------------------------------
--                                  COPYRIGHT
-------------------------------------------------------------------------------
-- Copyright (c) 2014 by Renesas Electronics Europe GmbH,
--               a company of the Renesas Electronics Corporation
-------------------------------------------------------------------------------
-- Purpose:      Startup Code
--
-------------------------------------------------------------------------------
--
-- Warranty Disclaimer
--
-- Because the Product(s) is licensed free of charge, there is no warranty
-- of any kind whatsoever and expressly disclaimed and excluded by Renesas,
-- either expressed or implied, including but not limited to those for
-- non-infringement of intellectual property, merchantability and/or
-- fitness for the particular purpose.
-- Renesas shall not have any obligation to maintain, service or provide bug
-- fixes for the supplied Product(s) and/or the Application.
--
-- Each User is solely responsible for determining the appropriateness of
-- using the Product(s) and assumes all risks associated with its exercise
-- of rights under this Agreement, including, but not limited to the risks
-- and costs of program errors, compliance with applicable laws, damage to
-- or loss of data, programs or equipment, and unavailability or
-- interruption of operations.
--
-- Limitation of Liability
--
-- In no event shall Renesas be liable to the User for any incidental,
-- consequential, indirect, or punitive damage (including but not limited
-- to lost profits) regardless of whether such liability is based on breach
-- of contract, tort, strict liability, breach of warranties, failure of
-- essential purpose or otherwise and even if advised of the possibility of
-- such damages. Renesas shall not be liable for any services or products
-- provided by third party vendors, developers or consultants identified or
-- referred to the User by Renesas in connection with the Product(s) and/or
-- the Application.
--
-------------------------------------------------------------------------------
-- Environment:
--              Device:         RH850P1M-C
--              IDE:            GHS Multi for V800  V7.1.6/2015.1.7
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-- Revision Control History:
-- CN1.00 : 2021-05-30  : Initial Version

-------------------------------------------------------------------------------
  .set LRAMS        0xFDE00000
  .set LRAME        0xFDE0FFFF

  .set CUx_EBV      0x00008000

  .global _unused_isr
  .global _ram_init
  .global _RESET_CORE1

  .extern __ex_entry_core1
  .extern _IntVectors_PE1

  .text
_RESET_CORE1:
  -- CPU function group program registers initialization
  mov   r0, r1
  mov   r0, r2
  mov   r0, r3
  mov   r0, r4
  mov   r0, r5
  mov   r0, r6
  mov   r0, r7
  mov   r0, r8
  mov   r0, r9
  mov   r0, r10
  mov   r0, r11
  mov   r0, r12
  mov   r0, r13
  mov   r0, r14
  mov   r0, r15
  mov   r0, r16
  mov   r0, r17
  mov   r0, r18
  mov   r0, r19
  mov   r0, r20
  mov   r0, r21
  mov   r0, r22
  mov   r0, r23
  mov   r0, r24
  mov   r0, r25
  mov   r0, r26
  mov   r0, r27
  mov   r0, r28
  mov   r0, r29
  mov   r0, r30
  mov   r0, r31

  -- CPU function group system registers initialization
  ldsr  r0,         EIPC,  0
  ldsr  r0,         EIPSW, 0
  ldsr  r0,         FEPC,  0
  ldsr  r0,         FEPSW, 0
  mov   0x00000020, r6
  ldsr  r6,         PSW,   0
  ldsr  r0,         EIIC,  0
  ldsr  r0,         FEIC,  0
  ldsr  r0,         CTPC,  0
  ldsr  r0,         CTPSW, 0
  ldsr  r0,         CTBP,  0
  ldsr  r0,         EIWR,  0
  ldsr  r0,         FEWR,  0
  ldsr  r0,         RBASE, 1
  ldsr  r0,         EBASE, 1
  ldsr  r0,         INTBP, 1
  ldsr  r0,         SCCFG, 1
  ldsr  r0,         SCBP,  1
  ldsr  r0,         MEA,   2
  ldsr  r0,         MEI,   2

  -- Don't Initialize registers list
  -- Following registers is't set by this startup routine
  -- SNZCFG, SPID, SPIDLIST, MCTL, PID, SVLOCK,
  -- PEID, BMID, RBCR0, RBCR1, RBNR, RBIP


  -- Don't Initialize registers list
  -- Following registers is't set by this startup routine
  -- SNZCFG, SPID, SPIDLIST, MCTL, PID, SVLOCK,
  -- PEID, BMID, RBCR0, RBCR1, RBNR, RBIP

  -- Local RAM Initialize
  mov LRAMS, r6
  mov LRAME, r7
  jarl _ram_init, lp

  -- Initialization of the global pointer
  mov __gp, gp

  -- Initialization of the text pointer
  mov __tp, r5

  -- Initialization of the stack pointer
  mov ___ghsend_stack, sp

  -- Initialization of the interrupt base pointer
  mov _IntVectors_PE1, r10
  ldsr r10, INTBP, 1

  -- First set EBASE register address
  mov __ex_entry_core1, r10
  ldsr r10, EBASE, 1

  -- then set 1 to PSW.EBV -> RBASE!=EBASE

  stsr PSW, r10, 0
  mov CUx_EBV, r11
  or r11, r10
  ldsr r10, PSW, 0

  -- Jump to the initialisation functions of the library
  -- and from there to main()
  jr __start

_unused_isr:
  br _unused_isr

_ram_init:
  br _ram_init_2
_ram_init_1:
  st.w r0, 0[r6]
  add 4, r6
_ram_init_2:
  cmp r6, r7
  bh _ram_init_1
  jmp [lp]
